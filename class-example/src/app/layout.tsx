import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import ApiProvider from '@/commons/providers/13-04-apollo-provider';
import Layout from '@/commons/layout';
const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--철수의폰트변수',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--글로벌폰트변수',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

interface Iprops {
  children: React.ReactNode;
}

export default function RootLayout({ children }: Iprops) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div>==========여기 위는 레이아웃 입니다.===========</div>

        {/* 13-04)레이아웃까지 grapql 요청 가능하도록 셋팅  => apollo setting 이외의 셋팅이 있다면 복잡해진다*/}
        {/* <ApolloSetting 모든페이지={<Layout>{children} </Layout>} /> */}
        {/* 13-04) 더 좋은 방식 */}
        <ApiProvider>
          <Layout>{children}</Layout>
        </ApiProvider>

        {/* Layout에는 apollo setting이 적용되지 않는 형태 */}
        {/* <Layout>
          <ApolloSetting>{children}</ApolloSetting>
        </Layout> */}

        <div>==========여기아래는 레이아웃 입니다.===========</div>
      </body>
    </html>
  );
}
//  페이지 접속시 작동원리
// 1. 게시판 페이지에 접속
// 2.내부적으로 루트레이아웃이 실행됨
// <RootLayout>
// <>내가 접속한 게시판 페이지 전체 내용 == 페이지컴포넌트</>

// </RootLayout>
